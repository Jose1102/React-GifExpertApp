{"version":3,"sources":["components/AddCategory.js","helps/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","imagenes","GifExpertApp","categories","category","ReactDOM","render","document","getElementById"],"mappings":"mMAyCeA,EAtCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,uBCPlBK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATxB,kBAcZM,GAdY,4CAAH,sDCcLO,EAdK,SAAC,GAAe,IAAZL,EAAW,EAAXA,IAIpB,OAFAd,QAAQC,IAAIa,GAGR,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,QAC5B,kCAAMF,EAAIE,MAAV,YCsBGO,EA3BC,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAGf,ECJwB,SAAEA,GAC1B,MAA0BhB,mBAAS,CAC/BuB,KAAO,GACPa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OArBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAK,SAAAC,GAEFC,YAAY,WACRJ,EACI,CACIf,KAAMkB,EACNL,SAAS,MAIlB,UAGZ,CAACpB,IAKGqB,EDvBwBM,CAAc3B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACI,mCAAOpB,KAELoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEUH,EAAOJ,KAAK,SAAAmB,GACV,OACA,cAAC,EAAD,CAEIlB,IAAMkB,GADDA,EAASjB,aEW3BkB,EA5BM,WAGjB,MAAoC7C,mBAAS,CACzC,gBADJ,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAIA,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWrB,KAAK,SAACsB,GACb,OAAO,cAAC,EAAD,CAEH/B,UAAW+B,GADLA,Y,MChBlCC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9e4ef159.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('')\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired \r\n\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\nexport const getGifs = async(categoria) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=dWkJCUBIGPR5IO9iOhoLWHSFdu2pkXUo`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url \r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ( { img } ) => {\r\n\r\n    console.log(img);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={img.url} alt={img.title}/>\r\n            <p> { img.title }  </p>\r\n               \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs( categoria );\r\n  \r\n\r\n    return (\r\n        <>\r\n            <h3> { categoria }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\"> Loading..</p> }\r\n\r\n            <div className=\"card-grid\"> \r\n                \r\n                    { images.map( imagenes=> {\r\n                        return( \r\n                        <GifGridItem \r\n                            key={imagenes.id}\r\n                            img={ imagenes }\r\n                        />)\r\n                    }) }     \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helps/getGifs'\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( categoria )\r\n            .then(imgs => {\r\n                \r\n                setTimeout( ()=> {\r\n                    setState(\r\n                        {\r\n                            data: imgs,\r\n                            loading: false\r\n                        }\r\n                    )\r\n\r\n                }, 3000) \r\n                \r\n            });\r\n    }, [categoria])\r\n\r\n   \r\n\r\n\r\n    return state;\r\n}","import { useState } from \"react\"\r\nimport AddCategory from \"./components/AddCategory\"\r\nimport GifGrid from \"./components/GifGrid\"\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState([\r\n        'Dragon Ball'\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => {\r\n                        return <GifGrid \r\n                            key={ category }\r\n                            categoria={category} \r\n                        />\r\n                    }) \r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}